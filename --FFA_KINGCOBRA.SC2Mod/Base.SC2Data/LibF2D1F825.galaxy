include "TriggerLibs/NativeLib"
include "Lib66284E8B_h"

include "LibF2D1F825_h"

//--------------------------------------------------------------------------------------------------
// Library: KILL BOUNTY
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libF2D1F825_InitLibraries () {
    libNtve_InitVariables();
    lib66284E8B_InitVariables();
}

// Variable Initialization
bool libF2D1F825_InitVariables_completed = false;

void libF2D1F825_InitVariables () {
    if (libF2D1F825_InitVariables_completed) {
        return;
    }

    libF2D1F825_InitVariables_completed = true;

    libF2D1F825_gv_bounty_leaderboard = c_boardNone;
}

// Functions
bool libF2D1F825_gf_acceptable_unit_for_bounty (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitGetType(lp_unit) == "Adept") || (UnitGetType(lp_unit) == "Archon") || (UnitGetType(lp_unit) == "Carrier") || (UnitGetType(lp_unit) == "Colossus") || (UnitGetType(lp_unit) == "DarkTemplar") || (UnitGetType(lp_unit) == "Disruptor") || (UnitGetType(lp_unit) == "HighTemplar") || (UnitGetType(lp_unit) == "Immortal") || (UnitGetType(lp_unit) == "Interceptor") || (UnitGetType(lp_unit) == "Mothership") || (UnitGetType(lp_unit) == "MothershipCore") || (UnitGetType(lp_unit) == "Observer") || (UnitGetType(lp_unit) == "ObserverSiegeMode") || (UnitGetType(lp_unit) == "Oracle") || (UnitGetType(lp_unit) == "Phoenix") || (UnitGetType(lp_unit) == "Probe") || (UnitGetType(lp_unit) == "Sentry") || (UnitGetType(lp_unit) == "Stalker") || (UnitGetType(lp_unit) == "Tempest") || (UnitGetType(lp_unit) == "VoidRay") || (UnitGetType(lp_unit) == "WarpPrismPhasing") || (UnitGetType(lp_unit) == "WarpPrism") || (UnitGetType(lp_unit) == "Zealot") || (UnitGetType(lp_unit) == "Banshee") || (UnitGetType(lp_unit) == "Battlecruiser") || (UnitGetType(lp_unit) == "Cyclone") || (UnitGetType(lp_unit) == "Ghost") || (UnitGetType(lp_unit) == "HellionTank") || (UnitGetType(lp_unit) == "Hellion") || (UnitGetType(lp_unit) == "Liberator") || (UnitGetType(lp_unit) == "LiberatorAG") || (UnitGetType(lp_unit) == "Marauder") || (UnitGetType(lp_unit) == "Marine") || (UnitGetType(lp_unit) == "Medivac") || (UnitGetType(lp_unit) == "Raven") || (UnitGetType(lp_unit) == "Reaper") || (UnitGetType(lp_unit) == "SCV") || (UnitGetType(lp_unit) == "SiegeTankSieged") || (UnitGetType(lp_unit) == "SiegeTank") || (UnitGetType(lp_unit) == "Thor") || (UnitGetType(lp_unit) == "ThorAP") || (UnitGetType(lp_unit) == "VikingAssault") || (UnitGetType(lp_unit) == "VikingFighter") || (UnitGetType(lp_unit) == "WidowMine") || (UnitGetType(lp_unit) == "WidowMineBurrowed") || (UnitGetType(lp_unit) == "Baneling") || (UnitGetType(lp_unit) == "BanelingBurrowed") || (UnitGetType(lp_unit) == "BroodLord") || (UnitGetType(lp_unit) == "Corruptor") || (UnitGetType(lp_unit) == "Drone") || (UnitGetType(lp_unit) == "DroneBurrowed") || (UnitGetType(lp_unit) == "Hydralisk") || (UnitGetType(lp_unit) == "HydraliskBurrowed") || (UnitGetType(lp_unit) == "Infestor") || (UnitGetType(lp_unit) == "InfestorBurrowed") || (UnitGetType(lp_unit) == "LurkerMPBurrowed") || (UnitGetType(lp_unit) == "LurkerMP") || (UnitGetType(lp_unit) == "Mutalisk") || (UnitGetType(lp_unit) == "Overlord") || (UnitGetType(lp_unit) == "OverlordTransport") || (UnitGetType(lp_unit) == "Overseer") || (UnitGetType(lp_unit) == "OverseerSiegeMode") || (UnitGetType(lp_unit) == "Queen") || (UnitGetType(lp_unit) == "QueenBurrowed") || (UnitGetType(lp_unit) == "Ravager") || (UnitGetType(lp_unit) == "RavagerBurrowed") || (UnitGetType(lp_unit) == "Roach") || (UnitGetType(lp_unit) == "RoachBurrowed") || (UnitGetType(lp_unit) == "SwarmHostMP") || (UnitGetType(lp_unit) == "SwarmHostBurrowedMP") || (UnitGetType(lp_unit) == "Ultralisk") || (UnitGetType(lp_unit) == "UltraliskBurrowed") || (UnitGetType(lp_unit) == "Viper") || (UnitGetType(lp_unit) == "Zergling") || (UnitGetType(lp_unit) == "ZerglingBurrowed"))) {
        return true;
    }
    else {
        return false;
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Bounty_init
//--------------------------------------------------------------------------------------------------
bool libF2D1F825_gt_Bounty_init_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_help_text;

    // Automatic Variable Declarations
    string auto77A90FA4_val;
    playergroup autoDA340911_g;
    int autoDA340911_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto77A90FA4_val = GameAttributeGameValue("2");
    if (auto77A90FA4_val == "0008") {
        libF2D1F825_gv_bounty_mult = 0.0;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_222179DF");
    }
    else if (auto77A90FA4_val == "0001") {
        libF2D1F825_gv_bounty_mult = 0.1;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_3DBCDAFE");
    }
    else if (auto77A90FA4_val == "0002") {
        libF2D1F825_gv_bounty_mult = 0.2;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_9B39234D");
    }
    else if (auto77A90FA4_val == "0003") {
        libF2D1F825_gv_bounty_mult = 0.3;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_ACAD349C");
    }
    else if (auto77A90FA4_val == "0004") {
        libF2D1F825_gv_bounty_mult = 0.4;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_F4368473");
    }
    else if (auto77A90FA4_val == "0005") {
        libF2D1F825_gv_bounty_mult = 0.5;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_44449B32");
    }
    else if (auto77A90FA4_val == "0006") {
        libF2D1F825_gv_bounty_mult = 0.6;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_49FE033F");
    }
    else if (auto77A90FA4_val == "0007") {
        libF2D1F825_gv_bounty_mult = 0.7;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_51B65FD2");
    }
    else {
        libF2D1F825_gv_bounty_mult = 0.0;
        lv_help_text = StringExternal("Param/Value/lib_F2D1F825_2349BCDB");
    }
    if ((libF2D1F825_gv_bounty_mult > 0.0)) {
        TextExpressionSetToken("Param/Expression/lib_F2D1F825_1C124517", "A", StringExternal("Param/Value/lib_F2D1F825_41BBE031"));
        TextExpressionSetToken("Param/Expression/lib_F2D1F825_1C124517", "B", lv_help_text);
        TextExpressionSetToken("Param/Expression/lib_F2D1F825_1C124517", "C", StringExternal("Param/Value/lib_F2D1F825_21D9661E"));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_F2D1F825_1C124517"));
        BoardCreate(3, 1, StringExternal("Param/Value/lib_F2D1F825_A1C39BE6"), Color(100.00, 100.00, 100.00));
        libF2D1F825_gv_bounty_leaderboard = BoardLastCreated();
        BoardSetState(libF2D1F825_gv_bounty_leaderboard, PlayerGroupAll(), c_boardStateShowing, false);
        BoardSetState(libF2D1F825_gv_bounty_leaderboard, lib66284E8B_gv_observerGroup, c_boardStateShowing, true);
        BoardSetState(libF2D1F825_gv_bounty_leaderboard, PlayerGroupAll(), c_boardStateSorted, true);
        BoardSetState(libF2D1F825_gv_bounty_leaderboard, PlayerGroupAll(), c_boardStateShowTitle, true);
        BoardSetState(libF2D1F825_gv_bounty_leaderboard, PlayerGroupAll(), c_boardStateShowHeader, false);
        BoardSort(libF2D1F825_gv_bounty_leaderboard, 2, false, 1);
        BoardSort(libF2D1F825_gv_bounty_leaderboard, 3, false, 2);
        BoardSetPlayerColumn(libF2D1F825_gv_bounty_leaderboard, 1, false);
        autoDA340911_g = PlayerGroupActive();
        autoDA340911_var = -1;
        while (true) {
            autoDA340911_var = PlayerGroupNextPlayer(autoDA340911_g, autoDA340911_var);
            if (autoDA340911_var < 0) { break; }
            BoardPlayerAdd(libF2D1F825_gv_bounty_leaderboard, autoDA340911_var);
            BoardItemSetText(libF2D1F825_gv_bounty_leaderboard, 1, (autoDA340911_var + 1), PlayerName(autoDA340911_var));
            BoardItemSetTextColor(libF2D1F825_gv_bounty_leaderboard, 1, (autoDA340911_var + 1), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoDA340911_var, false)));
            BoardItemSetFontSize(libF2D1F825_gv_bounty_leaderboard, 1, (autoDA340911_var + 1), 20);
            BoardItemSetIcon(libF2D1F825_gv_bounty_leaderboard, 2, (autoDA340911_var + 1), "Assets\\Textures\\icon-mineral-nobg.dds", true);
            BoardItemSetText(libF2D1F825_gv_bounty_leaderboard, 2, (autoDA340911_var + 1), StringExternal("Param/Value/lib_F2D1F825_27AA81C2"));
            BoardItemSetFontSize(libF2D1F825_gv_bounty_leaderboard, 2, (autoDA340911_var + 1), 20);
            BoardItemSetIcon(libF2D1F825_gv_bounty_leaderboard, 3, (autoDA340911_var + 1), "Assets\\Textures\\icon-gas-protoss-nobg.dds", true);
            BoardItemSetText(libF2D1F825_gv_bounty_leaderboard, 3, (autoDA340911_var + 1), StringExternal("Param/Value/lib_F2D1F825_F5D8C7E6"));
            BoardItemSetFontSize(libF2D1F825_gv_bounty_leaderboard, 3, (autoDA340911_var + 1), 20);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libF2D1F825_gt_Bounty_init_Init () {
    libF2D1F825_gt_Bounty_init = TriggerCreate("libF2D1F825_gt_Bounty_init_Func");
    TriggerAddEventMapInit(libF2D1F825_gt_Bounty_init);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bounty
//--------------------------------------------------------------------------------------------------
bool libF2D1F825_gt_Bounty_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bounty;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitHasBehavior2(EventUnit(), "Hallucination") == false))) {
            return false;
        }

        if (!((libF2D1F825_gv_bounty_mult > 0.0))) {
            return false;
        }

        if (!((EventPlayer() != libNtve_gf_KillingPlayer()))) {
            return false;
        }

        if (!(libF2D1F825_gf_acceptable_unit_for_bounty(EventUnit()))) {
            return false;
        }

        if (!((libNtve_gf_PlayerIsEnemy(EventPlayer(), libNtve_gf_KillingPlayer(), libNtve_ge_PlayerRelation_Enemy) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostMinerals) > 0))) {
        lv_bounty = FloorI((UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostMinerals)*libF2D1F825_gv_bounty_mult));
        PlayerModifyPropertyInt(libNtve_gf_KillingPlayer(), c_playerPropMinerals, c_playerPropOperAdd, lv_bounty);
        libF2D1F825_gv_bounty_recieved_minerals[libNtve_gf_KillingPlayer()] += lv_bounty;
    }

    if (((UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostVespene) > 0))) {
        lv_bounty = FloorI((UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostVespene)*libF2D1F825_gv_bounty_mult));
        PlayerModifyPropertyInt(libNtve_gf_KillingPlayer(), c_playerPropVespene, c_playerPropOperAdd, lv_bounty);
        libF2D1F825_gv_bounty_recieved_vespene[libNtve_gf_KillingPlayer()] += lv_bounty;
    }

    BoardItemSetText(libF2D1F825_gv_bounty_leaderboard, 2, (libNtve_gf_KillingPlayer() + 1), IntToText(libF2D1F825_gv_bounty_recieved_minerals[libNtve_gf_KillingPlayer()]));
    BoardItemSetText(libF2D1F825_gv_bounty_leaderboard, 3, (libNtve_gf_KillingPlayer() + 1), IntToText(libF2D1F825_gv_bounty_recieved_vespene[libNtve_gf_KillingPlayer()]));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF2D1F825_gt_Bounty_Init () {
    libF2D1F825_gt_Bounty = TriggerCreate("libF2D1F825_gt_Bounty_Func");
    TriggerAddEventUnitDied(libF2D1F825_gt_Bounty, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: player defeated
//--------------------------------------------------------------------------------------------------
bool libF2D1F825_gt_playerdefeated_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libF2D1F825_gv_bounty_mult > 0.0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BoardPlayerRemove(libF2D1F825_gv_bounty_leaderboard, EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF2D1F825_gt_playerdefeated_Init () {
    libF2D1F825_gt_playerdefeated = TriggerCreate("libF2D1F825_gt_playerdefeated_Func");
    TriggerAddEventPlayerLeft(libF2D1F825_gt_playerdefeated, c_playerAny, c_gameResultUndecided);
}

void libF2D1F825_InitTriggers () {
    libF2D1F825_gt_Bounty_init_Init();
    libF2D1F825_gt_Bounty_Init();
    libF2D1F825_gt_playerdefeated_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libF2D1F825_InitLib_completed = false;

void libF2D1F825_InitLib () {
    if (libF2D1F825_InitLib_completed) {
        return;
    }

    libF2D1F825_InitLib_completed = true;

    libF2D1F825_InitLibraries();
    libF2D1F825_InitVariables();
    libF2D1F825_InitTriggers();
}

include "Lib66284E8B"

