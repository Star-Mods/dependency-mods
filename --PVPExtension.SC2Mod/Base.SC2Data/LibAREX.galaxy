include "TriggerLibs/NativeLib"
include "LibARRA"
include "LibARMP"
include "LibARZC"
include "LibARMB"
include "LibC6A42A55"

include "LibAREX_h"

//--------------------------------------------------------------------------------------------------
// Library: ALL RACES MELEE EXTENSION
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libAREX_InitLibraries () {
    libNtve_InitVariables();
    libARRA_InitVariables();
    libARMP_InitVariables();
    libARZC_InitVariables();
    libARMB_InitVariables();
    libC6A42A55_InitVariables();
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Game Attributes2
//--------------------------------------------------------------------------------------------------
bool libAREX_gt_GameAttributes2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_aG_Supplies;
    string lv_aG_Resources;
    string lv_aG_Zombies;
    string lv_aG_Money;
    string lv_aG_Bounty;
    string lv_aG_Mode;
    string lv_aG_Monobattle;
    string lv_aG_KOTH_DeathZone;
    string lv_aG_KOTH_Vision;
    string lv_aG_KOTH_ControlUnits;
    string lv_aG_KOTH_PreparationTime;
    string lv_aG_KOTH_WinTimer;
    string lv_aG_KillBounty;
    string lv_aG_BloodLust;
    string lv_availableFactions;
    string lv_playerFactionGameAtrribute;
    fixed lv_zC_Difficulty;
    fixed lv_zC_BountyMinerals;
    fixed lv_zC_BountyVespene;
    bool lv_kOTH_Vision;
    int lv_kOTH_DeathZone;
    bool lv_kOTH_OnlyGround;
    bool lv_kOTH_OnlyVisible;
    int lv_kOTH_PreparationTime;
    int lv_kOTH_WinTimer;
    int lv_kOTH_KillBounty;

    // Automatic Variable Declarations
    playergroup auto246D2D84_g;
    int auto246D2D84_var;
    string auto2E5D6861_val;
    string auto3944F19B_val;
    string auto94E226EB_val;
    string auto74B0C66F_val;
    string autoAD3B0E42_val;
    string autoCE1E1E9C_val;
    string auto8943CBBE_val;
    string autoAFDADCFB_val;
    string auto5D4A1FE7_val;
    string auto2D192A97_val;
    string auto9028A8C4_val;
    string autoDBDBE053_val;
    string autoC3CA774C_val;
    string auto47887B5C_val;

    // Variable Initialization
    lv_aG_Supplies = GameAttributeGameValue("2");
    lv_aG_Resources = GameAttributeGameValue("3");
    lv_aG_Zombies = GameAttributeGameValue("4");
    lv_aG_Money = GameAttributeGameValue("5");
    lv_aG_Bounty = GameAttributeGameValue("6");
    lv_aG_Mode = GameAttributeGameValue("7");
    lv_aG_Monobattle = GameAttributeGameValue("8");
    lv_aG_KOTH_DeathZone = GameAttributeGameValue("12");
    lv_aG_KOTH_Vision = GameAttributeGameValue("13");
    lv_aG_KOTH_ControlUnits = GameAttributeGameValue("14");
    lv_aG_KOTH_PreparationTime = GameAttributeGameValue("15");
    lv_aG_KOTH_WinTimer = GameAttributeGameValue("17");
    lv_aG_KillBounty = GameAttributeGameValue("18");
    lv_aG_BloodLust = GameAttributeGameValue("19");
    lv_availableFactions = "ALL";

    // Actions
    if (!runActions) {
        return true;
    }

    lv_playerFactionGameAtrribute = "16";
    libARMP_gf_SetAvailableFactions(lv_availableFactions);
    auto246D2D84_g = libARMP_gf_ARCGetActivePlayers();
    auto246D2D84_var = -1;
    while (true) {
        auto246D2D84_var = PlayerGroupNextPlayer(auto246D2D84_g, auto246D2D84_var);
        if (auto246D2D84_var < 0) { break; }
        libARMP_gf_SetPlayerRaceARC(auto246D2D84_var, libARMP_gf_GetCustomRace(auto246D2D84_var, lv_playerFactionGameAtrribute, lv_availableFactions));
    }
    auto2E5D6861_val = lv_aG_Money;
    if (auto2E5D6861_val == "0002") {
        libARMP_gf_SetInitialResources("Rich");
    }
    else if (auto2E5D6861_val == "0003") {
        libARMP_gf_SetInitialResources("Jeff Bezos");
    }
    else {
    }
    auto3944F19B_val = lv_aG_Resources;
    if (auto3944F19B_val == "0003") {
        libARMP_gf_SetHarvestableResources("Rich");
    }
    else if (auto3944F19B_val == "0002") {
        libARMP_gf_SetHarvestableResources("BGH");
    }
    else if (auto3944F19B_val == "0004") {
        libARMP_gf_SetHarvestableResources("BGH Rich");
    }
    else {
    }
    auto94E226EB_val = lv_aG_Supplies;
    if (auto94E226EB_val == "0001") {
        libARMP_gf_SetSupplyCap("100");
    }
    else if (auto94E226EB_val == "0003") {
        libARMP_gf_SetSupplyCap("300");
    }
    else if (auto94E226EB_val == "0005") {
        libARMP_gf_SetSupplyCap("400");
    }
    else if (auto94E226EB_val == "0004") {
        libARMP_gf_SetSupplyCap("500");
    }
    else if (auto94E226EB_val == "0006") {
        libARMP_gf_SetSupplyCap("1000");
    }
    else {
    }
    auto74B0C66F_val = lv_aG_Bounty;
    if (auto74B0C66F_val == "0001") {
        lv_kOTH_KillBounty = 10;
    }
    else if (auto74B0C66F_val == "0002") {
        lv_kOTH_KillBounty = 20;
    }
    else if (auto74B0C66F_val == "0003") {
        lv_kOTH_KillBounty = 30;
    }
    else if (auto74B0C66F_val == "0004") {
        lv_kOTH_KillBounty = 40;
    }
    else if (auto74B0C66F_val == "0005") {
        lv_kOTH_KillBounty = 50;
    }
    else if (auto74B0C66F_val == "0006") {
        lv_kOTH_KillBounty = 60;
    }
    else if (auto74B0C66F_val == "0007") {
        lv_kOTH_KillBounty = 70;
    }
    else {
    }
    if ((lv_kOTH_KillBounty != 0)) {
    }

    autoAD3B0E42_val = lv_aG_Mode;
    if (autoAD3B0E42_val == "0002") {
        libARMP_gf_InitializeMeleeGame();
    }
    else if (autoAD3B0E42_val == "0001") {
        autoCE1E1E9C_val = lv_aG_Bounty;
        if (autoCE1E1E9C_val == "0004") {
            lv_zC_BountyMinerals = 0.0;
            lv_zC_BountyVespene = 0.0;
        }
        else if (autoCE1E1E9C_val == "0001") {
            lv_zC_BountyMinerals = 5.0;
            lv_zC_BountyVespene = 2.0;
        }
        else if (autoCE1E1E9C_val == "0002") {
            lv_zC_BountyMinerals = 10.0;
            lv_zC_BountyVespene = 5.0;
        }
        else if (autoCE1E1E9C_val == "0003") {
            lv_zC_BountyMinerals = 20.0;
            lv_zC_BountyVespene = 10.0;
        }
        else {
        }
        auto8943CBBE_val = lv_aG_Zombies;
        if (auto8943CBBE_val == "0005") {
            lv_zC_Difficulty = 0.0;
        }
        else if (auto8943CBBE_val == "0001") {
            lv_zC_Difficulty = 1.0;
        }
        else if (auto8943CBBE_val == "0002") {
            lv_zC_Difficulty = 2.0;
        }
        else if (auto8943CBBE_val == "0003") {
            lv_zC_Difficulty = 3.0;
        }
        else if (auto8943CBBE_val == "0004") {
            lv_zC_Difficulty = 4.0;
        }
        else {
        }
        libARZC_gf_Zombiecatastrophe(lv_zC_Difficulty, lv_zC_BountyMinerals, lv_zC_BountyVespene);
        libARMP_gf_InitializeMeleeGame();
    }
    else if (autoAD3B0E42_val == "0004") {
        autoAFDADCFB_val = lv_aG_KOTH_WinTimer;
        if (autoAFDADCFB_val == "0001") {
            lv_kOTH_WinTimer = 30;
        }
        else if (autoAFDADCFB_val == "0002") {
            lv_kOTH_WinTimer = 45;
        }
        else if (autoAFDADCFB_val == "0003") {
            lv_kOTH_WinTimer = 60;
        }
        else if (autoAFDADCFB_val == "0004") {
            lv_kOTH_WinTimer = 75;
        }
        else if (autoAFDADCFB_val == "0005") {
            lv_kOTH_WinTimer = 90;
        }
        else if (autoAFDADCFB_val == "0007") {
            lv_kOTH_WinTimer = 105;
        }
        else if (autoAFDADCFB_val == "0006") {
            lv_kOTH_WinTimer = 120;
        }
        else {
            lv_kOTH_WinTimer = 30;
        }
        auto5D4A1FE7_val = lv_aG_KOTH_PreparationTime;
        if (auto5D4A1FE7_val == "0002") {
            lv_kOTH_PreparationTime = 5;
        }
        else if (auto5D4A1FE7_val == "0003") {
            lv_kOTH_PreparationTime = 10;
        }
        else if (auto5D4A1FE7_val == "0004") {
            lv_kOTH_PreparationTime = 15;
        }
        else if (auto5D4A1FE7_val == "0005") {
            lv_kOTH_PreparationTime = 20;
        }
        else if (auto5D4A1FE7_val == "0006") {
            lv_kOTH_PreparationTime = 25;
        }
        else {
            lv_kOTH_PreparationTime = 5;
        }
        auto2D192A97_val = lv_aG_KOTH_Vision;
        if (auto2D192A97_val == "0002") {
            lv_kOTH_Vision = true;
        }
        else {
        }
        auto9028A8C4_val = lv_aG_KOTH_DeathZone;
        if (auto9028A8C4_val == "0001") {
            lv_kOTH_DeathZone = 20;
        }
        else {
        }
        autoDBDBE053_val = lv_aG_KOTH_ControlUnits;
        if (autoDBDBE053_val == "0003") {
            lv_kOTH_OnlyGround = true;
        }
        else if (autoDBDBE053_val == "0002") {
            lv_kOTH_OnlyVisible = true;
        }
        else if (autoDBDBE053_val == "0005") {
            lv_kOTH_OnlyGround = true;
            lv_kOTH_OnlyVisible = true;
        }
        else {
        }
        autoC3CA774C_val = lv_aG_BloodLust;
        if (autoC3CA774C_val == "0002") {
        }
        else {
        }
        libC6A42A55_gf_KOTH(lv_kOTH_Vision, lv_kOTH_OnlyVisible, lv_kOTH_OnlyGround, (lv_kOTH_PreparationTime * 60), lv_kOTH_WinTimer, lv_kOTH_DeathZone);
        libARMP_gf_InitializeMeleeGame();
    }
    else if (autoAD3B0E42_val == "0003") {
        auto47887B5C_val = lv_aG_Monobattle;
        if (auto47887B5C_val == "0001") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_DraftSelection);
        }
        else if (auto47887B5C_val == "0002") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_BlindRandom);
        }
        else if (auto47887B5C_val == "0003") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_SingleDraft);
        }
        else if (auto47887B5C_val == "0004") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_TierDraft);
        }
        else {
        }
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAREX_gt_GameAttributes2_Init () {
    libAREX_gt_GameAttributes2 = TriggerCreate("libAREX_gt_GameAttributes2_Func");
    TriggerAddEventMapInit(libAREX_gt_GameAttributes2);
}

void libAREX_InitTriggers () {
    libAREX_gt_GameAttributes2_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libAREX_InitLib_completed = false;

void libAREX_InitLib () {
    if (libAREX_InitLib_completed) {
        return;
    }

    libAREX_InitLib_completed = true;

    libAREX_InitLibraries();
    libAREX_InitTriggers();
}

